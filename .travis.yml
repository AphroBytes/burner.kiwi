language: go

go:
  - "1.10"

# skip install to grab dependencies from /vendor
install: true

# grab dynamodb local, gometalinter, minify and packr
before_script:
  - wget https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz -O /tmp/dynamodb_local_latest.tar.gz
  - tar -xzf /tmp/dynamodb_local_latest.tar.gz -C /tmp
  - java -Djava.library.path=/tmp/DynamoDBLocal_lib -jar /tmp/DynamoDBLocal.jar -inMemory &
  - go get -u gopkg.in/alecthomas/gometalinter.v2
  - gometalinter.v2 --install
  - go get github.com/tdewolff/minify/cmd/minify
  - go get -u github.com/gobuffalo/packr/...
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/mattn/goveralls

script:
  - gometalinter.v2 --vendor ./...
  - go test -v -race ./...
  - go test -v -covermode=count -coverprofile=coverage.out

after_success:
  - goveralls -coverprofile=coverage.out -service=travis-ci -repotoken $COVERALLS_TOKEN

before_deploy:
  - pip install --user awscli
  - ./build.sh
  - ./before_deploy.sh

deploy:
  # Deploy to ap-southeast-2 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-ap-southeast-2
    region: ap-southeast-2
    local_dir: buildres/cloudformation
  # Deploy to eu-west-1 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-eu-west-1
    region: eu-west-1
    local_dir: buildres/cloudformation
  # Deploy to us-east-1 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-us-east-1
    region: us-east-1
    local_dir: buildres/cloudformation
  # Deploy static assets
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: static.burner.kiwi
    region: ap-southeast-2
    local_dir: buildres/cloudformation
  # Deploy lambda func - do this via a script and the aws cli because travis resets everything to the settings
  # specified here. Why would I want that... Also pipe the output to /dev/null so we don't expose environment vars
  - provider: script
    skip_cleanup: true
    script: aws lambda update-function-code --zip-file=fileb://buildres/cloudformation/burnerkiwi.zip --region=ap-southeast-2 --function-name=burner-kiwi-main >/dev/null
