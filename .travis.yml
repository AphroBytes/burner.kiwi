language: go

go:
  - "1.11"

# skip install to grab dependencies from /vendor
install: true

env:
  - DATABASE_URL=postgresql://postgres@127.0.0.1/postgres?sslmode=disable

services:
  - postgresql

# grab dynamodb local, gometalinter, minify and packr
before_script:
  - wget https://s3-us-west-2.amazonaws.com/dynamodb-local/dynamodb_local_latest.tar.gz -O /tmp/dynamodb_local_latest.tar.gz
  - tar -xzf /tmp/dynamodb_local_latest.tar.gz -C /tmp
  - java -Djava.library.path=/tmp/DynamoDBLocal_lib -jar /tmp/DynamoDBLocal.jar -inMemory &
  - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.12.5
  - go get github.com/tdewolff/minify/cmd/minify
  - go get -u github.com/gobuffalo/packr/...
  - go get golang.org/x/tools/cmd/cover
  - go get github.com/mattn/goveralls

script:
  - ./bin/golangci-lint run ./... --skip-dirs vendor/ --skip-files [A-Za-z]*_test.go --enable misspell --enable gocyclo
  - go test -v -race ./...
  - go test -covermode=count -coverprofile=profile.cov ./...
  # remove testsuite.go coverage results from profile.cov -- seen as coveralls doesn't have a convenient way to do it
  - sed -i '/testsuite.go/d' ./profile.cov
  - goveralls -service=travis-ci -coverprofile=profile.cov || echo "Push to coveralls failed"

before_deploy:
  - pip install --user awscli
  - ./build.sh
  - ./before_deploy.sh

deploy:
  # Deploy to ap-southeast-2 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-ap-southeast-2
    region: ap-southeast-2
    local_dir: buildres/cloudformation
  # Deploy to eu-west-1 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-eu-west-1
    region: eu-west-1
    local_dir: buildres/cloudformation
  # Deploy to us-east-1 cloudformation bucket
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: burner-kiwi-us-east-1
    region: us-east-1
    local_dir: buildres/cloudformation
  # Deploy static assets
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: static.burner.kiwi
    region: ap-southeast-2
    local_dir: buildres/static
  # Deploy about.burner.kiwi assets
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: about.burner.kiwi
    region: ap-southeast-2
    local_dir: about.burner.kiwi
  # Deploy to lambda removed -- due to misuse
  # Deploy to dev specific branch
  # Deploy static assets to dev s3
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY_ID
    secret_access_key: $AWS_SECRET_ACCESS_KEY
    skip_cleanup: true
    bucket: dev-static.burner.kiwi
    region: ap-southeast-2
    local_dir: buildres/static
    on:
      branch: dev
