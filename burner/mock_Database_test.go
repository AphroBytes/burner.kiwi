// Code generated by mockery v1.0.0. DO NOT EDIT.

package burner

import mock "github.com/stretchr/testify/mock"

// MockDatabase is an autogenerated mock type for the Database type
type MockDatabase struct {
	mock.Mock
}

// EmailAddressExists provides a mock function with given fields: _a0
func (_m *MockDatabase) EmailAddressExists(_a0 string) (bool, error) {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetInboxByID provides a mock function with given fields: _a0
func (_m *MockDatabase) GetInboxByID(_a0 string) (Inbox, error) {
	ret := _m.Called(_a0)

	var r0 Inbox
	if rf, ok := ret.Get(0).(func(string) Inbox); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(Inbox)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessageByID provides a mock function with given fields: _a0, _a1
func (_m *MockDatabase) GetMessageByID(_a0 string, _a1 string) (Message, error) {
	ret := _m.Called(_a0, _a1)

	var r0 Message
	if rf, ok := ret.Get(0).(func(string, string) Message); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(Message)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMessagesByInboxID provides a mock function with given fields: _a0
func (_m *MockDatabase) GetMessagesByInboxID(_a0 string) ([]Message, error) {
	ret := _m.Called(_a0)

	var r0 []Message
	if rf, ok := ret.Get(0).(func(string) []Message); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Message)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveNewInbox provides a mock function with given fields: _a0
func (_m *MockDatabase) SaveNewInbox(_a0 Inbox) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(Inbox) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SaveNewMessage provides a mock function with given fields: _a0
func (_m *MockDatabase) SaveNewMessage(_a0 Message) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(Message) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetInboxCreated provides a mock function with given fields: _a0
func (_m *MockDatabase) SetInboxCreated(_a0 Inbox) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(Inbox) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetInboxFailed provides a mock function with given fields: _a0
func (_m *MockDatabase) SetInboxFailed(_a0 Inbox) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(Inbox) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
